package com.example.malware;

import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.canvas.Canvas;
import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonBar;
import javafx.scene.control.Slider;
import javafx.scene.effect.BlendMode;
import javafx.scene.input.MouseButton;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import javafx.scene.shape.StrokeLineCap;
import javafx.scene.shape.StrokeLineJoin;
import javafx.stage.Stage;

import java.io.IOException;

public class HelloApplication extends Application {
    private GraphicsContext gc;

    @Override
    public void start(Stage stage) throws IOException {
        // --- Standardzeug das schon drinnen war ---
        //FXMLLoader fxmlLoader = new FXMLLoader(HelloApplication.class.getResource("hello-view.fxml"));
        //Scene scene = new Scene(fxmlLoader.load(), 1080, 720);
        // ---

        int windowSizeX = 1080;
        int windowSizeY = 600;

        Canvas canvas = new Canvas(windowSizeX, windowSizeY - 100);

        gc = canvas.getGraphicsContext2D();
        gc.setStroke(Color.BLACK);
        gc.setLineWidth(2.0);
        gc.setLineCap(StrokeLineCap.ROUND);



        canvas.setStyle("-fx-alignment: bottom_center");
        canvas.setStyle("-fx-border-width: 10");




        canvas.addEventHandler(MouseEvent.MOUSE_PRESSED, event -> {
            if (event.getButton() == MouseButton.PRIMARY) {
                gc.beginPath();
                gc.moveTo(event.getX(), event.getY());
                gc.stroke();
            }
        });

        canvas.addEventHandler(MouseEvent.MOUSE_DRAGGED, event -> {
            if (event.getButton() == MouseButton.PRIMARY) {
                gc.lineTo(event.getX(), event.getY());
                gc.stroke();
            }
        });

        HBox toolbar = new HBox();
        toolbar.setPrefHeight(100);

        Slider strokeWidth = new Slider();
        strokeWidth.setMin(0.5);
        strokeWidth.setMax(40.0);
        strokeWidth.setOnMouseDragged(e -> {
            gc.setLineWidth(strokeWidth.getValue());
        });

        Button clear = new Button("Clear");
        clear.setFocusTraversable(false);

        clear.setOnAction(e -> {
            gc.clearRect(0, 0, windowSizeX, windowSizeY);
        });


        Button Fill = new Button("Fill");
        Fill.setFocusTraversable(false);

        Fill.setOnAction(e -> {
            gc.setFill(gc.getStroke());
            gc.fill();
        });


        Rectangle buttonColor1= new Rectangle(20, 20);
        Rectangle buttonColor2= new Rectangle(20, 20);
        Rectangle buttonColor3= new Rectangle(20, 20);
        Rectangle buttonColor4= new Rectangle(20, 20);



        Button colorChangeBlack = new Button();
        colorChangeBlack.setFocusTraversable(false);
        buttonColor1.setFill(Color.BLACK);
        colorChangeBlack.setGraphic(buttonColor1);
        colorChangeBlack.setBackground(null);
        colorChangeBlack.setContextMenu(null);

        colorChangeBlack.setOnAction(e -> {
            gc.setStroke(Color.BLACK);
        });


        Button colorChangeB = new Button();
        colorChangeB.setFocusTraversable(false);
        buttonColor2.setFill(Color.BLUE);
        colorChangeB.setGraphic(buttonColor2);
        colorChangeB.setBackground(null);

        colorChangeB.setOnAction(e -> {
            gc.setStroke(Color.BLUE);
        });

        Button colorChangeR = new Button();
        colorChangeR.setFocusTraversable(false);
        buttonColor3.setFill(Color.RED);
        colorChangeR.setGraphic(buttonColor3);
        colorChangeR.setBackground(null);

        colorChangeR.setOnAction(e -> {
            gc.setStroke(Color.RED);
        });

        Button colorChangeG = new Button();
        colorChangeG.setFocusTraversable(false);
        buttonColor4.setFill(Color.GREEN);
        colorChangeG.setGraphic(buttonColor4);
        colorChangeG.setBackground(null);

        colorChangeG.setOnAction(e -> {
            gc.setStroke(Color.GREEN);
        });



        toolbar.setAlignment(Pos.CENTER);
        toolbar.setStyle("-fx-background-color: #404040");

        toolbar.getChildren().addAll(clear, Fill, colorChangeBlack, colorChangeB, colorChangeR, colorChangeG, strokeWidth);


        BorderPane root = new BorderPane();
        root.setTop(toolbar);
        root.setCenter(canvas);
        root.setBottom(null);


        Scene scene = new Scene(root, windowSizeX, windowSizeY);
        stage.setScene(scene);
        stage.setTitle("Mal-Ware");
        stage.show();


    }

    public static void main(String[] args) {
        launch();
    }
}