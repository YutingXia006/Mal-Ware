package malware.client.malFunctions;

import javafx.scene.canvas.GraphicsContext;
import javafx.scene.control.RadioButton;
import javafx.scene.control.ToggleGroup;
import malware.client.CanvasPainter;
import malware.UserAction;

import java.util.ArrayList;

public class FunctionHandler {

    private final CanvasPainter painter;
    private final GraphicsContext gc;
    private final ArrayList<RadioButton> functionButtons = new ArrayList<>();
    private final ToggleGroup functionGroup = new ToggleGroup();
    private final static ArrayList<SimpleFunctionsAbstract> functions = new ArrayList<>();

    public FunctionHandler(CanvasPainter painter, GraphicsContext gc) {

        this.painter = painter;
        this.gc = gc;
        addDefaultDrawing();
        initFunctions();
        addButtons();
    }



    private void addDefaultDrawing(){
        RadioButton draw = new RadioButton("Draw");
        functionButtons.add(draw);
        draw.setSelected(true);
        draw.setToggleGroup(functionGroup);
    }

    private void initFunctions(){

        SquareFunction squareFunction = new SquareFunction(painter);
        functions.add(squareFunction);
        CircleFunction circleFunction = new CircleFunction(painter);
        functions.add(circleFunction);
        TriangleFunction triangleFunction = new TriangleFunction(painter);
        functions.add(triangleFunction);
    }

    public String getSelectedFunction(){
        RadioButton selectedRadioButton = (RadioButton) functionGroup.getSelectedToggle();
        return selectedRadioButton.getText();
    }

    public ArrayList<RadioButton> getFunctionButtons(){
        return functionButtons;
    }

    private void addButtons(){
        functions.forEach(f-> functionButtons.add(createButton(f)));

    }

    private RadioButton createButton(SimpleFunctionsAbstract f){

        RadioButton button = new RadioButton(f.getDisplayName());
        button.setToggleGroup(functionGroup);

        return button;
    }

    public void takeOver(UserAction action, String functionName, double x, double y) {

        functions.forEach(f -> {

            if (f.getDisplayName().equals(functionName)) {
                f.executeFunction(action ,x, y, gc.getLineWidth(), gc.getStroke().toString());
            }

        });
    }


}
