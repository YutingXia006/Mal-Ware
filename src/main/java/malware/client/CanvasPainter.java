package malware.client;

import javafx.scene.canvas.GraphicsContext;
import malware.client.uiClient.ActionHandler;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

public class CanvasPainter {

    GraphicsContext gc;
    InstructionFactory instructionFactory;
    ClientNetInterface clientNetInterface;
    private static final Logger log = LogManager.getLogger(CanvasPainter.class);
    String drawingString;
    boolean pathClosed = true;



    public CanvasPainter(GraphicsContext gc, ClientNetInterface clientNetInterface) {

        this.gc = gc;
        this.clientNetInterface = clientNetInterface;
        instructionFactory = new InstructionFactory();
    }


    public void draw(int historyIndex, UserAction action, double x, double y, boolean sendToServer){
        if(UserAction.PRESS == action|| pathClosed){
            gc.beginPath();
            pathClosed = false;
            log.info("Painter: begin path");
        }

        gc.lineTo(x,y);
        log.info("Painter: line to "+x +" | "+y);


        gc.stroke();

        if (UserAction.RELEASE == action){
            gc.closePath();
            pathClosed = true;
            log.info("Painter: closed path");

        }

        if(sendToServer) {
            drawToServer(historyIndex, action, x, y);
        }


    }

    private void drawToServer(int historyIndex, UserAction action, double x, double y){
        drawingString = instructionFactory.createInstruction(
                historyIndex,
                clientNetInterface.getName(),
                action.toString(),
                gc.getStroke().toString(),
                String.valueOf(gc.getLineWidth()),
                x,
                y);

        clientNetInterface.writeToServer(drawingString);
    }

}
